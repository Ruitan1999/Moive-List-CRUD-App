{"ast":null,"code":"var _jsxFileName = \"/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/AddMovie.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useRef, useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport ErrorModal from './ErrorModal';\nimport InputView from './InputView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddMovie(props) {\n  _s();\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const imgRef = useRef('');\n  const [error, setError] = useState();\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value\n    };\n    props.onAddMovie(movie);\n\n    // titleRef.current.value = '';\n    // openingTextRef.current.value = '';\n    // releaseDateRef.current.value = '';\n  }\n\n  const errorModalHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onError: errorModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(InputView, {\n      title: movie.title,\n      opening: openingTextRef,\n      releaseDate: releaseDateRef,\n      sendForm: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AddMovie, \"pRKbRS1YI5y2CaqlbuhFm6WL0R4=\");\n_c = AddMovie;\nexport default AddMovie;\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","Fragment","useRef","useState","ref","uploadBytesResumable","getDownloadURL","ErrorModal","InputView","jsxDEV","_jsxDEV","AddMovie","props","_s","titleRef","openingTextRef","releaseDateRef","imgRef","error","setError","submitHandler","event","preventDefault","movie","title","current","value","openingText","releaseDate","onAddMovie","errorModalHandler","children","message","onError","fileName","_jsxFileName","lineNumber","columnNumber","opening","sendForm","_c","$RefreshReg$"],"sources":["/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/AddMovie.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport ErrorModal from './ErrorModal';\nimport InputView from './InputView';\n\nfunction AddMovie(props) {\n\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const imgRef = useRef('');\n\n  const [error, setError] = useState();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n\n    // titleRef.current.value = '';\n    // openingTextRef.current.value = '';\n    // releaseDateRef.current.value = '';\n  }\n\n\n\n\n  const errorModalHandler = () => {\n    setError(null)\n  }\n\n  return (\n    <Fragment>\n    \n    {error && <ErrorModal title={error.title} message={error.message} onError={errorModalHandler}></ErrorModal>}\n    <InputView  title={movie.title}   opening={openingTextRef}  releaseDate={releaseDateRef} sendForm={submitHandler}></InputView>\n\n    {/* <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='date' id='date' ref={releaseDateRef} />\n      </div>\n      \n      <button onClick={props.onClick}>Add Movie</button>\n    </form> */}\n    </Fragment>\n  );\n}\n\nexport default AddMovie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvB,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAMa,cAAc,GAAGb,MAAM,CAAC,EAAE,CAAC;EACjC,MAAMc,cAAc,GAAGd,MAAM,CAAC,EAAE,CAAC;EACjC,MAAMe,MAAM,GAAGf,MAAM,CAAC,EAAE,CAAC;EAEzB,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,EAAE;EAEpC,SAASiB,aAAaA,CAACC,KAAK,EAAE;IAC5BA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,KAAK,GAAG;MACZC,KAAK,EAAEV,QAAQ,CAACW,OAAO,CAACC,KAAK;MAC7BC,WAAW,EAAEZ,cAAc,CAACU,OAAO,CAACC,KAAK;MACzCE,WAAW,EAAEZ,cAAc,CAACS,OAAO,CAACC;IACtC,CAAC;IAEDd,KAAK,CAACiB,UAAU,CAACN,KAAK,CAAC;;IAEvB;IACA;IACA;EACF;;EAKA,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BX,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACET,OAAA,CAACT,QAAQ;IAAA8B,QAAA,GAERb,KAAK,iBAAIR,OAAA,CAACH,UAAU;MAACiB,KAAK,EAAEN,KAAK,CAACM,KAAM;MAACQ,OAAO,EAAEd,KAAK,CAACc,OAAQ;MAACC,OAAO,EAAEH;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAc,eAC3G3B,OAAA,CAACF,SAAS;MAAEgB,KAAK,EAAED,KAAK,CAACC,KAAM;MAAGc,OAAO,EAAEvB,cAAe;MAAEa,WAAW,EAAEZ,cAAe;MAACuB,QAAQ,EAAEnB;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAkBnH;AAEf;AAACxB,EAAA,CAjEQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAmEjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}