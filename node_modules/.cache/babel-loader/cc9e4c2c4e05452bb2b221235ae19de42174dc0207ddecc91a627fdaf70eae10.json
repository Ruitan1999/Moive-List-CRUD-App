{"ast":null,"code":"var _jsxFileName = \"/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [newMovie, setNewMovie] = useState();\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  // const addingMoviewHandler = () => {\n\n  // }\n\n  async function addMovieHandler(movie) {\n    const repsonse = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await repsonse.json();\n    fetchMoviesHandler();\n  }\n  async function removeMovieHandler(movie) {\n    const repsonse = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'DELETE',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await repsonse.json();\n    fetchMoviesHandler();\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \">\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nNdTk7lMpv0lX2vKeGtPAnV71N0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","newMovie","setNewMovie","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","repsonse","method","body","JSON","stringify","headers","removeMovieHandler","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","content","_c","$RefreshReg$"],"sources":["/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [newMovie, setNewMovie] = useState();\n\n  \n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for(const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n\n  // const addingMoviewHandler = () => {\n  \n  // }\n  \n\n  async function addMovieHandler(movie) {\n    const repsonse = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type' : 'application/json'\n      }\n    });\n    const data = await repsonse.json();\n\n    fetchMoviesHandler()\n    \n    \n  }\n\n\n  async function removeMovieHandler(movie) {\n    const repsonse = await fetch('https://reactproject-78ba1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'DELETE',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type' : 'application/json'\n      }\n    });\n    const data = await repsonse.json();\n\n    fetchMoviesHandler()\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}