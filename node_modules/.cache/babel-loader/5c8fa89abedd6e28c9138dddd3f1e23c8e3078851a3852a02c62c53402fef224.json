{"ast":null,"code":"var _jsxFileName = \"/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit(props) {\n  _s();\n  console.log(props);\n\n  // let titleRef = useRef(props.title);\n  // let openingTextRef = useRef(props.openingText);\n  // let releaseDateRef = useRef(props.openingText);\n\n  // const [title, setTitle] =  useState(titleRef)\n\n  // let Editmovie = {\n\n  //   title: props.title,\n  //   openingText: props.openingText,\n  //   releaseDate: props.releaseDate,\n\n  // // };\n\n  // let Editmovie = {\n  //   title: props.showEditText.title,\n  //   openingText:props.openingText, \n  //   releaseDate: props.releaseDate,\n  //   id: props.id,\n  // }\n\n  // console.log(Editmovie)\n\n  const [error, setError] = useState();\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n  }\n\n  const errorModalHandler = () => {\n    setError(null);\n  };\n\n  // const formattedDate = new Date(props.editMovie.releaseDate).toLocaleDateString('en-AU');\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onError: errorModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: props.editMovie.title,\n          onChange: props.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"opening-text\",\n          children: \"Opening Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          id: \"opening-text\",\n          value: props.editMovie.openingText,\n          onChange: props.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: props.editMovie.releaseDate,\n          onChange: props.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitHandler,\n        children: \"Edit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"ohCv/qX5Qvv7Cjn7EU0ICsWDpi4=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","Fragment","useRef","useState","classes","ErrorModal","jsxDEV","_jsxDEV","Edit","props","_s","console","log","error","setError","submitHandler","event","preventDefault","errorModalHandler","children","title","message","onError","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","control","htmlFor","type","id","value","editMovie","onChange","rows","openingText","releaseDate","onClick","_c","$RefreshReg$"],"sources":["/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\n\n\n\n\nfunction Edit(props) {\n  console.log(props);\n\n  // let titleRef = useRef(props.title);\n  // let openingTextRef = useRef(props.openingText);\n  // let releaseDateRef = useRef(props.openingText);\n\n  // const [title, setTitle] =  useState(titleRef)\n\n  // let Editmovie = {\n    \n  //   title: props.title,\n  //   openingText: props.openingText,\n  //   releaseDate: props.releaseDate,\n\n  // // };\n\n    \n  // let Editmovie = {\n  //   title: props.showEditText.title,\n  //   openingText:props.openingText, \n  //   releaseDate: props.releaseDate,\n  //   id: props.id,\n  // }\n\n\n  \n\n  // console.log(Editmovie)\n\n\n  const [error, setError] = useState();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n   \n\n   \n  }\n\n\n\n  const errorModalHandler = () => {\n    setError(null)\n  }\n\n  // const formattedDate = new Date(props.editMovie.releaseDate).toLocaleDateString('en-AU');\n\n  return (\n    <Fragment>\n    {error && <ErrorModal title={error.title} message={error.message} onError={errorModalHandler}></ErrorModal>}\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' value={props.editMovie.title} onChange={props.onChange}/>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' value={props.editMovie.openingText} onChange={props.onChange}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='date' id='date' value={props.editMovie.releaseDate} onChange={props.onChange}/>\n      </div>\n      \n      <button onClick={submitHandler}>Edit Movie</button>\n    </form>\n    </Fragment>\n  );\n}\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}