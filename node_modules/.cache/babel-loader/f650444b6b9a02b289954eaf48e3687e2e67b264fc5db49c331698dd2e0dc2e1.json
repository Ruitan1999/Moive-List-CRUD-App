{"ast":null,"code":"var _jsxFileName = \"/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit(props) {\n  _s();\n  // let titleRef = useRef(props.title);\n  // let openingTextRef = useRef(props.openingText);\n  // let releaseDateRef = useRef(props.openingText);\n\n  // const [title, setTitle] =  useState(titleRef)\n\n  let Editmovie = {\n    title: titleRef.props.title,\n    openingText: openingTextRef.props.openingText,\n    releaseDate: releaseDateRef.props.releaseDate\n  };\n  const [error, setError] = useState();\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n    props.showEditText(Editmovie);\n  }\n  const errorModalHandler = () => {\n    setError(null);\n  };\n\n  // const ValueChangeHandler = () => {\n  //   value={titleRef}\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onError: errorModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          placeholder: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"opening-text\",\n          children: \"Opening Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          id: \"opening-text\",\n          placeholder: openingTextRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          placeholder: releaseDateRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.showEditText,\n        children: \"Edit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"ohCv/qX5Qvv7Cjn7EU0ICsWDpi4=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","Fragment","useRef","useState","classes","ErrorModal","jsxDEV","_jsxDEV","Edit","props","_s","Editmovie","title","titleRef","openingText","openingTextRef","releaseDate","releaseDateRef","error","setError","submitHandler","event","preventDefault","showEditText","errorModalHandler","children","message","onError","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","control","htmlFor","type","id","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\n\n\n\n\nfunction Edit(props) {\n\n  // let titleRef = useRef(props.title);\n  // let openingTextRef = useRef(props.openingText);\n  // let releaseDateRef = useRef(props.openingText);\n\n  // const [title, setTitle] =  useState(titleRef)\n\n  let Editmovie = {\n    title: titleRef.props.title,\n    openingText: openingTextRef.props.openingText,\n    releaseDate: releaseDateRef.props.releaseDate,\n\n  };\n  \n  const [error, setError] = useState();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n   \n\n    props.showEditText(Editmovie);\n\n  }\n\n  const errorModalHandler = () => {\n    setError(null)\n  }\n\n\n  // const ValueChangeHandler = () => {\n  //   value={titleRef}\n  // }\n\n\n  return (\n    <Fragment>\n    {error && <ErrorModal title={error.title} message={error.message} onError={errorModalHandler}></ErrorModal>}\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' placeholder={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' placeholder={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='date' id='date' placeholder={releaseDateRef} />\n      </div>\n      \n      <button onClick={() => (props.showEditText)}>Edit Movie</button>\n    </form>\n    </Fragment>\n  );\n}\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}