{"ast":null,"code":"var _jsxFileName = \"/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit(props) {\n  _s();\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n  const [error, setError] = useState();\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n    const Editmovie = {\n      title: titleRef.props.title,\n      openingText: openingTextRef.props.openingText,\n      releaseDate: releaseDateRef.props.releaseDate\n    };\n    props.showEditText(Editmovie);\n    console.log(props.showEditText(movie));\n  }\n  const errorModalHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onError: errorModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"opening-text\",\n          children: \"Opening Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          id: \"opening-text\",\n          ref: openingTextRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          ref: releaseDateRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.showEditText,\n        children: \"Edit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"lwo/tP27ryarhhrTOrh99e6R0Co=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","Fragment","useRef","useState","classes","ErrorModal","jsxDEV","_jsxDEV","Edit","props","_s","titleRef","openingTextRef","releaseDateRef","error","setError","submitHandler","event","preventDefault","Editmovie","title","openingText","releaseDate","showEditText","console","log","movie","errorModalHandler","children","message","onError","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","control","htmlFor","type","id","ref","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/ruitan/Downloads/06-preparing-the-project-for-the-next-steps/src/components/Edit.js"],"sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\nimport classes from './AddMovie.module.css';\nimport ErrorModal from './ErrorModal';\n\n\n\n\nfunction Edit(props) {\n\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n\n  const [error, setError] = useState();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    // if(titleRef.current.value.trim().length === 0 || openingTextRef.current.value.trim().length === 0 || releaseDateRef.current.value.trim().length === 0) {\n    //   setError({\n    //     title: 'Invalid Input',\n    //     message: 'Please Try To Fill in all of the fields before adding Movie'\n    //   });\n    //   return;\n    // }\n\n    const Editmovie = {\n      title: titleRef.props.title,\n      openingText: openingTextRef.props.openingText,\n      releaseDate: releaseDateRef.props.releaseDate,\n\n    };\n\n    props.showEditText(Editmovie);\n    console.log(props.showEditText(movie));\n\n  }\n\n  const errorModalHandler = () => {\n    setError(null)\n  }\n\n  return (\n    <Fragment>\n    {error && <ErrorModal title={error.title} message={error.message} onError={errorModalHandler}></ErrorModal>}\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='date' id='date' ref={releaseDateRef} />\n      </div>\n      \n      <button onClick={() => (props.showEditText)}>Edit Movie</button>\n    </form>\n    </Fragment>\n  );\n}\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}